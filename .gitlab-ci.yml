include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

stages:
  - p4_sim
  - rtl_sim
  - bitfile
  - package
  - trigger_downstream

variables:
  GIT_STRATEGY: clone

.common:
  image: $CI_REGISTRY/ht/xilinx-tools-docker:26009-g26ccc4b6
  before_script:
    - source /opt/Xilinx/Vivado/2022.1/settings64.sh
  variables:
    XILINXD_LICENSE_FILE: "2100@dmv.es.net"
    # Required to keep click python module happy
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
    GIT_SUBMODULE_STRATEGY: recursive

p4bm:
  stage: p4_sim
  extends: .common
  tags:
    - ht-sim
  script:
    - apt update -y
    - apt install -y python3-setuptools
    - pip3 install scapy
    - make -C p4/sim build sim-all
  artifacts:
    name: "artifacts.$CI_PROJECT_NAME.$CI_JOB_NAME.$CI_PIPELINE_ID"
    paths:
      - p4/sim
  needs: []

sim:
  stage: rtl_sim
  extends: .common
  tags:
    - ht-sim
  script:
    - make -C tests/regression
    - grep 'PASSED.*suites passing' tests/regression/run_0/sim.log
  artifacts:
    name: "artifacts.$CI_PROJECT_NAME.$CI_JOB_NAME.$CI_PIPELINE_ID"
    reports:
      junit:
        - tests/regression/run_0/tests.xml
    when: always
  timeout: 2h
  needs:
    - p4bm
  allow_failure: true

build_bitfile:
  stage: bitfile
  extends: .common
  tags:
    - ht-synth
  script:
    - make build BUILD_NAME=open-nic-ci
  artifacts:
    name: "artifacts.$CI_PROJECT_NAME.$CI_JOB_NAME.$CI_PIPELINE_ID"
    paths:
      - artifacts
      - esnet-smartnic-hw
    exclude:
      - .git/**
      - .git
      - .gitignore
      - .gitlab-ci.yml
      - .gitmodules
    when: always
    expire_in: 2 weeks
  timeout: 8h
  needs: []
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      when: manual
      allow_failure: true

.hwapi:
  stage: package
  extends: .common
  tags:
    - ht-misc
  before_script: []
  script:
    - unzip artifacts/open-nic-ci/artifacts.esnet-smartnic-hw.export_hwapi.0.zip
    - |
      cat <<_EOF >> hwapi.env
      SN_HW_HWAPI_JOB_NUMBER=$CI_JOB_ID
      _EOF
    - cat hwapi.env
  artifacts:
    name: "artifacts.$SN_HW_APP_NAME.$CI_PIPELINE_ID"
    paths:
      - esnet-smartnic-hwapi
    when: always
    expire_in: 3 month
    reports:
      dotenv:
        hwapi.env
  timeout: 30m

export_hwapi:
  extends: .hwapi
  variables:
    SN_HW_APP_NAME: udplb
  needs:
    - build_bitfile

.trigger_fw:
  stage: trigger_downstream
  variables:
    SN_HW_GROUP: $CI_PROJECT_NAMESPACE
    SN_HW_REPO: $CI_PROJECT_NAME
    SN_HW_BRANCH: $CI_COMMIT_BRANCH
    # override the artifact URL in the triggered repo so it pulls directly from the hwapi job from this pipeline
    ESNET_SMARTNIC_HWAPI_URL: "$CI_PROJECT_URL/-/jobs/$SN_HW_HWAPI_JOB_NUMBER/artifacts/download?file_type=archive"
  trigger:
    project: ht/esnet-smartnic-fw
    branch: main
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      when: manual
      allow_failure: true

fw_udplb:
  extends: .trigger_fw
  variables:
    SN_HW_APP_NAME: udplb
    SN_HW_API_JOB: export_hwapi
  needs:
    - export_hwapi
